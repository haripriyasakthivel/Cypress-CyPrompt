/// <reference types="cypress" />

/*
    This is a demo test file to showcase the usage of cy.prompt command
    It uses cy.prompt() to perform user registration, login and employee table verification on the EA App demo site
    The test data like username, password, and email are fetched from Cypress environment variables
    cy.prompt() takes an array of instructions and executes them step-by-step
    Optional placeholders option let you use dynamic and sensitive values while maintaining cache efficiency
    cy.prompt() yields the value yielded by the last Cypress command executed in the prompt
*/

describe('Cyprompt Demo', () => {

    let username;
    let password;
    let email;

    before(() => {
        username = Cypress.env('username');
        password = Cypress.env('password');
        email = Cypress.env('email');
    });

    it('Use cy.prompt to register a new user', () => {
        cy.prompt(
            [
                'Visit /',
                'Click the Register button',
                `Type "{{username}}" in the "Username" field`,
                `Type "{{password}}" in the "Password" field`,
                `Type the same password "{{password}}" in the "Confirm Password" field`,
                `Type valid email address as "{{email}}" in the "Email" field`,
                'Click the "Register" button to complete registration',
                'Verify we are redirected to the dashboard by checking for "About" text on the page'
            ],
            {
                placeholders: {
                    username,
                    password,
                    email
                }
            }
        )
    });

    it('Use cy.prompt to login with existing user and verify the employee table', () => {
        cy.prompt(
            [
                'Visit /',
                'Click the Login button',
                `Type "{{username}}" in the "Username" field`,
                `Type "{{password}}" in the "Password" field`,
                'Click the "Login" button to login',
                'Verify we are redirected to the dashboard by checking for "About" text on the page',
                'Click on "Employee List" link from the top navigation menu',
                'Verify we are on Employee List page by checking the url contains "Employee"',
                'Verify the Employee List table is visible',
                'Verify the employee "John" is present in the table',
                'Verify "Benefits" link is present for employee "John" in the table using "attribute" selector'
            ],
            {
                placeholders: {
                    username,
                    password
                }
            }
        ).should('have.attr', 'href').and('include', '/Benefit/Details')

        /* 
        Code generated by cy.prompt() for the test above
        
        // Prompt step 1: Visit /
        cy.visit("/");

        // Prompt step 2: Click the Login button
        cy.get("#loginLink").click()

        // Prompt step 3: Type "{{username}}" in the "Username" field
        cy.get("[name=\"UserName\"]").type("userk4ji0p")

        // Prompt step 4: Type "{{password}}" in the "Password" field
        cy.get("[name=\"Password\"]").type("T2fiuc34!")

        // Prompt step 5: Click the "Login" button to login
        cy.get("#loginIn").click()

        // Prompt step 6: Verify we are redirected to the dashboard by checking for "About" text on the page
        cy.get("a[href=\"/Home/About\"]").should("be.visible")

        // Prompt step 7: Click on "Employee List" link from the top navigation menu
        cy.get("a[href=\"/Employee\"]").click()

        // Prompt step 8: Verify we are on Employee List page by checking the url contains "Employee"
        cy.url().should("contain", "Employee")

        // Prompt step 9: Verify the Employee List table is visible
        cy.get("table.table").should("be.visible")

        // Prompt step 10: Verify the employee "John" is present in the table
        cy.get("tr:nth-child(5) td:nth-child(1)").should("be.visible")

        // Prompt step 11: Verify "Benefits" link is present for employee "John" in the table using "attribute" selector
        cy.get("a[href=\"/Benefit/Details/4\"]").should("contain", "Benefits").should('have.attr', 'href').and('include', '/Benefit/Details')  
       
        */

    });
});